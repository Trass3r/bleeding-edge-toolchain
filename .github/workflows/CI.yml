name: CI

on:
  push:
  schedule:
    - cron: '0 5 * * 1'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: Trass3r/setup-cpp@master
    - name: prerequisites
      run: |
        sudo apt update
        sudo apt install -y g++-9 bison flex g++-mingw-w64-x86-64 p7zip texinfo
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 900 --slave /usr/bin/g++ g++ /usr/bin/g++-9
    - name: build
      run: |
        mkdir build && cd build
        TERM=xterm-256color ../build-bleeding-edge-toolchain.sh --skip-documentation --enable-win64

    - run: echo "::set-env name=DATE::$(date '+%y%m%d')"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # provided by Actions
      with:
        tag_name: v$DATE
        release_name: v$DATE
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/arm-none-eabi-gcc-$DATE.tar.xz
        asset_name: arm-none-eabi-gcc.tar.xz
        asset_content_type: application/x-xz
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/installWin64/arm-none-eabi-gcc-$DATE-win64.7z
        asset_name: arm-none-eabi-gcc.7z
        asset_content_type: application/x-7z-compressed
